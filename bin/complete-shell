#!/usr/bin/env bash

OPTIONS_SPEC="\
  $(basename $BASH_SOURCE) [<options>] <command> <arguments>

Commands:

  install <github-user/complete-'command'>
  add <complete-'command'.bash>
  rehash

See 'complete-shell help' for complete help.

Options:
--
h           Show the command summary
 
x           Debug - Turn on Bash trace (set -x) output
"

main() {
  source "$COMPLETE_SHELL_ROOT/lib/complete-shell/commands.bash"

  (source "$COMPLETE_SHELL_ROOT/lib/complete-shell.bash" \
   complete-shell:check-env) ||
    die "complete-shell command failed."

  get-opts "$@"

  "complete-shell:$command_name" "${command_args[@]}"
}

get-opts() {
  if [ $# -eq 0 ]; then
    set -- --help
  else
    set -- "$@"
  fi

  rc=0
  parsed="$(
    echo "$OPTIONS_SPEC" |
    git rev-parse --parseopt -- "$@"
  )" || rc=$?
  if [ $rc -eq 0 ]; then
    eval "$parsed"
  else
    if [[ $PAGER == less ]]; then
      eval "$parsed" | less -FRX
    else
      eval "$parsed"
    fi
    exit $rc
  fi

  while [ $# -gt 0 ]; do
    local option="$1"; shift
    case "$option" in
      -c)
        cell_count="$1"
        shift
        ;;
      --) break ;;
      -x) set -x ;;
      *) error "unexpected option '$option'" ;;
    esac
  done

  command_name="$1"; shift
  command_args=("$@")

  can "complete-shell:$command_name" ||
    die "Invalid command: '$command_name'"
}

can() {
  [ "$(type -t "$1")" == function ]
}

[[ $0 != $BASH_SOURCE ]] || main "$@"

# vim: set ft=sh sw=2 lisp:
